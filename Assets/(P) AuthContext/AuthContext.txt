(1)
(AuthContext)
(AuthContext.jsx)
import { createContext, useContext, useState } from "react";

export const AuthContext = createContext();

// eslint-disable-next-line react-refresh/only-export-components
export const useAuthContext = () => {
    return useContext(AuthContext);
};

export const AuthContextProvider = ({ children }) => {
    const [authUser, setAuthUser] = useState(JSON.parse(localStorage.getItem("chat-user")) || null);

    return <AuthContext.Provider value={{ authUser, setAuthUser }}>{children}</AuthContext.Provider>;
};


(App.jsx)
import './App.css'
import { Navigate, Route, Routes } from "react-router-dom";
import Home from './pages/home/Home';
import Login from './pages/login/Login';
import SignUp from './pages/signup/SignUp';
import { Toaster } from 'react-hot-toast';
import { useAuthContext } from './context/AuthContext';

function App() {
  const { authUser } = useAuthContext();
  return (
    <div className='p-4 h-screen flex items-center justify-center'>
      <Routes>
      <Route path='/'       element={ authUser ?  <Home/> : <Navigate to={'/login'} />} />
      <Route path='/login'  element={ authUser ? <Navigate to='/' /> : <Login/>}  />
      <Route path='/signup' element={ authUser ? <Navigate to='/' /> : <SignUp/>} />
      </Routes>
      <Toaster/>
    </div>
)
}

export default App;


(useSignup.js)
import { useAuthContext } from "../context/AuthContext";
    const { setAuthUser } = useAuthContext();
    if(data.error){
    throw new Error(data.error)
    }
    localStorage.setItem("chat-user", JSON.stringify(data));
    setAuthUser(data);
