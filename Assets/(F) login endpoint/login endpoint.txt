(1)
(login endpoint)
(auth.controllers.js)
export const login =  async (req, res) => {
  try {
    const {username,password} =req.body;
    const user = await User.findOne({username});
    const isPasswordCorrect = await bcrypt.compare(password, user?.password || "");

    if (!user || !isPasswordCorrect) {
      return res.status(400).json({error: "Invalid username or password"});
    }

    generateTokenAndSetCookie(user._id, res);

    res.status(200).json({
      _id: user._id,
      fullName: user.fullName,
      username: user.username,
      profilePic: user.profilePic,
    });
  } catch (error) {
    console.log("Error in login controller", error.message);
    res.status(500).json({error:"Internal server error"});
  }
};
Terminal:
POSTMAN:
POST:
http://localhost:5000/api/auth/login
{
    // username,password
    "username": "narutouzumaki",
    "password": "567890"
}
Response:
{
{
    "_id": "667d1c250d8a4357d643e07c",
    "fullName": "Naruto Uzumaki",
    "username": "narutouzumaki",
    "profilePic": "https://avatar.iran.liara.run/public/boy?username=narutouzumaki"
}
MongoDB:
{
    "_id": "667d1c250d8a4357d643e07c",
    "fullName": "Naruto Uzumaki",
    "username": "narutouzumaki",
    "profilePic": "https://avatar.iran.liara.run/public/boy?username=narutouzumaki"
}
